--- a/qCC/plugins/qBlur/CMakeLists.txt
+++ b/qCC/plugins/qBlur/CMakeLists.txt
@@ -1,6 +1,6 @@
 cmake_minimum_required(VERSION 2.8)
 
-option( INSTALL_QBLUR_PLUGIN "Check to install qBlur plugin" OFF )
+option( INSTALL_QBLUR_PLUGIN "Check to install qBlur plugin" ON )
 
 if (INSTALL_QBLUR_PLUGIN)
 
--- a/qCC/plugins/qHPR/CMakeLists.txt
+++ b/qCC/plugins/qHPR/CMakeLists.txt
@@ -13,5 +13,6 @@ include( ../CMakePluginTpl.cmake )
 
 target_link_libraries( ${PROJECT_NAME} qhull )
 include_directories( ${QHULL_LIB_INCLUDE_DIR} )
+include_directories( ${qCC_SOURCE_DIR} )
 
 endif()
--- a/qCC/plugins/qPoissonRecon/CMakeLists.txt
+++ b/qCC/plugins/qPoissonRecon/CMakeLists.txt
@@ -1,6 +1,6 @@
 cmake_minimum_required(VERSION 2.8)
 
-option( INSTALL_QPOISSON_RECON_PLUGIN "Check to install qPoissonRecon plugin" OFF )
+option( INSTALL_QPOISSON_RECON_PLUGIN "Check to install qPoissonRecon plugin" ON )
 
 if (INSTALL_QPOISSON_RECON_PLUGIN)
 
--- a/qCC/plugins/qPoissonRecon/qPoissonRecon.cpp
+++ b/qCC/plugins/qPoissonRecon/qPoissonRecon.cpp
@@ -44,6 +44,8 @@
 #include "Windows.h"
 #endif
 
+//NOT PORTABLE
+#include <time.h>
 qPoissonRecon::qPoissonRecon(QObject* parent/*=0*/)
 	: QObject(parent)
 	, m_action(0)
@@ -187,15 +189,20 @@ void qPoissonRecon::doAction()
 		s_depth = depth;
 		s_mesh = &mesh;
 		s_info = &info;
+        //ugly isn't it ?
+        struct timespec waiter;
+        waiter.tv_sec = 0;
+        waiter.tv_nsec = 500000000;
+ 
 		QFuture<void> future = QtConcurrent::run(doReconstruct);
 
 		unsigned progress = 0;
 		while (!future.isFinished())
 		{
 		    #if defined(_WIN32) || defined(WIN32)
-			::Sleep(500);
+            ::Sleep(500);
 			#else
-			sleep(500);
+            nanosleep(&waiter, NULL);
 			#endif
 
 			progressCb.update(++progress);
