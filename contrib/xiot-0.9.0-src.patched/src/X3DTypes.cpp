#include <xiot/X3DTypes.h>
#include <stdexcept>
#include <sstream>
#include <iostream>

namespace XIOT {
	  
	const char* Property::FloatEncodingAlgorithm = "http://www.web3d.org/x3d/properties/fi/FloatEncodingAlgorithm";
	const char* Property::IntEncodingAlgorithm = "http://www.web3d.org/x3d/properties/fi/IntEncodingAlgorithm";
	const char* Encoder::BuiltIn = 0; 
	const char* Encoder::DeltazlibIntArrayEncoder = "encoder://web3d.org/DeltazlibIntArrayEncoder";
	const char* Encoder::QuantizedzlibFloatArrayEncoder = "encoder://web3d.org/QuantizedzlibFloatArrayEncoder";

	  std::map<std::string, int>	X3DTypes::elementFromStringMap;
	  std::map<std::string, int>	X3DTypes::attributeFromStringMap;
	  std::map<int, std::string>	X3DTypes::elementFromIDMap;
	  std::map<int, std::string>	X3DTypes::attributeFromIDMap;
 
  const char* X3DTypes::getProfileString(X3DProfile profile)
    {
    switch(profile) {
      case Immersive: return "Immersive";
      case Full: return "Full";
      case Interactive: return "Interactive";
      case Interchange: return "Interchange";
      case Core: return "Core";
      case MPEG4Interactive: return "MPEG4Interactive";
      default: return "unknown";
    }
    }
  const char* X3DTypes::getVersionString(X3DVersion version)
    {
     switch(version) {
      case VERSION_3_0: return "3.0";
      case VERSION_3_1: return "3.1";
      case VERSION_3_2: return "3.2";
      default: return "unknown";
    }
    }

	  
	  const char* X3DTypes::getAttributeByID(int id)
	  {
		  return attributeFromIDMap[id].c_str();
	  }

	  const char* X3DTypes::getElementByID(int id)
	  {
		  return elementFromIDMap[id].c_str();
	  }

  	  int X3DTypes::getElementID(const std::string &elementStr)
	  {	
		std::map<std::string, int>::const_iterator I = elementFromStringMap.find(elementStr);
		if (I != elementFromStringMap.end())
		  return I->second;
		else
		  return -1;
	  }

	  int X3DTypes::getAttributeID(const std::string &attributeStr)
	  {
		std::map<std::string, int>::const_iterator I = attributeFromStringMap.find(attributeStr);
		if (I != attributeFromStringMap.end())
		  return I->second;
		else
		  return -1;
	  }

	  void X3DTypes::initMaps()
	  {
		if(!attributeFromIDMap.empty() || !elementFromIDMap.empty() || !attributeFromStringMap.empty() || !elementFromStringMap.empty())
			return;
		
		elementFromIDMap.insert(std::pair<int,std::string>(0, "Shape"));
		elementFromIDMap.insert(std::pair<int,std::string>(1, "Appearance"));
		elementFromIDMap.insert(std::pair<int,std::string>(2, "Material"));
		elementFromIDMap.insert(std::pair<int,std::string>(3, "IndexedFaceSet"));
		elementFromIDMap.insert(std::pair<int,std::string>(4, "ProtoInstance"));
		elementFromIDMap.insert(std::pair<int,std::string>(5, "Transform"));
		elementFromIDMap.insert(std::pair<int,std::string>(6, "ImageTexture"));
		elementFromIDMap.insert(std::pair<int,std::string>(7, "TextureTransform"));
		elementFromIDMap.insert(std::pair<int,std::string>(8, "Coordinate"));
		elementFromIDMap.insert(std::pair<int,std::string>(9, "Normal"));
		elementFromIDMap.insert(std::pair<int,std::string>(10, "Color"));
		elementFromIDMap.insert(std::pair<int,std::string>(11, "ColorRGBA"));
		elementFromIDMap.insert(std::pair<int,std::string>(12, "TextureCoordinate"));
		elementFromIDMap.insert(std::pair<int,std::string>(13, "ROUTE"));
		elementFromIDMap.insert(std::pair<int,std::string>(14, "fieldValue"));
		elementFromIDMap.insert(std::pair<int,std::string>(15, "Group"));
		elementFromIDMap.insert(std::pair<int,std::string>(16, "LOD"));
		elementFromIDMap.insert(std::pair<int,std::string>(17, "Switch"));
		elementFromIDMap.insert(std::pair<int,std::string>(18, "Script"));
		elementFromIDMap.insert(std::pair<int,std::string>(19, "IndexedTriangleFanSet"));
		elementFromIDMap.insert(std::pair<int,std::string>(20, "IndexedTriangleSet"));
		elementFromIDMap.insert(std::pair<int,std::string>(21, "IndexedTriangleStripSet"));
		elementFromIDMap.insert(std::pair<int,std::string>(22, "MultiTexture"));
		elementFromIDMap.insert(std::pair<int,std::string>(23, "MultiTextureCoordinate"));
		elementFromIDMap.insert(std::pair<int,std::string>(24, "MultiTextureTransform"));
		elementFromIDMap.insert(std::pair<int,std::string>(25, "IndexedLineSet"));
		elementFromIDMap.insert(std::pair<int,std::string>(26, "PointSet"));
		elementFromIDMap.insert(std::pair<int,std::string>(27, "StaticGroup"));
		elementFromIDMap.insert(std::pair<int,std::string>(28, "Sphere"));
		elementFromIDMap.insert(std::pair<int,std::string>(29, "Box"));
		elementFromIDMap.insert(std::pair<int,std::string>(30, "Cone"));
		elementFromIDMap.insert(std::pair<int,std::string>(31, "Anchor"));
		elementFromIDMap.insert(std::pair<int,std::string>(32, "Arc2D"));
		elementFromIDMap.insert(std::pair<int,std::string>(33, "ArcClose2D"));
		elementFromIDMap.insert(std::pair<int,std::string>(34, "AudioClip"));
		elementFromIDMap.insert(std::pair<int,std::string>(35, "Background"));
		elementFromIDMap.insert(std::pair<int,std::string>(36, "Billboard"));
		elementFromIDMap.insert(std::pair<int,std::string>(37, "BooleanFilter"));
		elementFromIDMap.insert(std::pair<int,std::string>(38, "BooleanSequencer"));
		elementFromIDMap.insert(std::pair<int,std::string>(39, "BooleanToggle"));
		elementFromIDMap.insert(std::pair<int,std::string>(40, "BooleanTrigger"));
		elementFromIDMap.insert(std::pair<int,std::string>(41, "Circle2D"));
		elementFromIDMap.insert(std::pair<int,std::string>(42, "Collision"));
		elementFromIDMap.insert(std::pair<int,std::string>(43, "ColorInterpolator"));
		elementFromIDMap.insert(std::pair<int,std::string>(44, "Contour2D"));
		elementFromIDMap.insert(std::pair<int,std::string>(45, "ContourPolyline2D"));
		elementFromIDMap.insert(std::pair<int,std::string>(46, "CoordinateDouble"));
		elementFromIDMap.insert(std::pair<int,std::string>(47, "CoordinateInterpolator"));
		elementFromIDMap.insert(std::pair<int,std::string>(48, "CoordinateInterpolator2D"));
		elementFromIDMap.insert(std::pair<int,std::string>(49, "Cylinder"));
		elementFromIDMap.insert(std::pair<int,std::string>(50, "CylinderSensor"));
		elementFromIDMap.insert(std::pair<int,std::string>(51, "DirectionalLight"));
		elementFromIDMap.insert(std::pair<int,std::string>(52, "Disk2D"));
		elementFromIDMap.insert(std::pair<int,std::string>(53, "EXPORT"));
		elementFromIDMap.insert(std::pair<int,std::string>(54, "ElevationGrid"));
		elementFromIDMap.insert(std::pair<int,std::string>(55, "EspduTransform"));
		elementFromIDMap.insert(std::pair<int,std::string>(56, "ExternProtoDeclare"));
		elementFromIDMap.insert(std::pair<int,std::string>(57, "Extrusion"));
		elementFromIDMap.insert(std::pair<int,std::string>(58, "FillProperties"));
		elementFromIDMap.insert(std::pair<int,std::string>(59, "Fog"));
		elementFromIDMap.insert(std::pair<int,std::string>(60, "FontStyle"));
		elementFromIDMap.insert(std::pair<int,std::string>(61, "GeoCoordinate"));
		elementFromIDMap.insert(std::pair<int,std::string>(62, "GeoElevationGrid"));
		elementFromIDMap.insert(std::pair<int,std::string>(63, "GeoLOD"));
		elementFromIDMap.insert(std::pair<int,std::string>(64, "GeoLocation"));
		elementFromIDMap.insert(std::pair<int,std::string>(65, "GeoMetadata"));
		elementFromIDMap.insert(std::pair<int,std::string>(66, "GeoOrigin"));
		elementFromIDMap.insert(std::pair<int,std::string>(67, "GeoPositionInterpolator"));
		elementFromIDMap.insert(std::pair<int,std::string>(68, "GeoTouchSensor"));
		elementFromIDMap.insert(std::pair<int,std::string>(69, "GeoViewpoint"));
		elementFromIDMap.insert(std::pair<int,std::string>(70, "HAnimDisplacer"));
		elementFromIDMap.insert(std::pair<int,std::string>(71, "HAnimHumanoid"));
		elementFromIDMap.insert(std::pair<int,std::string>(72, "HAnimJoint"));
		elementFromIDMap.insert(std::pair<int,std::string>(73, "HAnimSegment"));
		elementFromIDMap.insert(std::pair<int,std::string>(74, "HAnimSite"));
		elementFromIDMap.insert(std::pair<int,std::string>(75, "IMPORT"));
		elementFromIDMap.insert(std::pair<int,std::string>(76, "IS"));
		elementFromIDMap.insert(std::pair<int,std::string>(77, "Inline"));
		elementFromIDMap.insert(std::pair<int,std::string>(78, "IntegerSequencer"));
		elementFromIDMap.insert(std::pair<int,std::string>(79, "IntegerTrigger"));
		elementFromIDMap.insert(std::pair<int,std::string>(80, "KeySensor"));
		elementFromIDMap.insert(std::pair<int,std::string>(81, "LineProperties"));
		elementFromIDMap.insert(std::pair<int,std::string>(82, "LineSet"));
		elementFromIDMap.insert(std::pair<int,std::string>(83, "LoadSensor"));
		elementFromIDMap.insert(std::pair<int,std::string>(84, "MetadataDouble"));
		elementFromIDMap.insert(std::pair<int,std::string>(85, "MetadataFloat"));
		elementFromIDMap.insert(std::pair<int,std::string>(86, "MetadataInteger"));
		elementFromIDMap.insert(std::pair<int,std::string>(87, "MetadataSet"));
		elementFromIDMap.insert(std::pair<int,std::string>(88, "MetadataString"));
		elementFromIDMap.insert(std::pair<int,std::string>(89, "MovieTexture"));
		elementFromIDMap.insert(std::pair<int,std::string>(90, "NavigationInfo"));
		elementFromIDMap.insert(std::pair<int,std::string>(91, "NormalInterpolator"));
		elementFromIDMap.insert(std::pair<int,std::string>(92, "NurbsCurve"));
		elementFromIDMap.insert(std::pair<int,std::string>(93, "NurbsCurve2D"));
		elementFromIDMap.insert(std::pair<int,std::string>(94, "NurbsOrientationInterpolator"));
		elementFromIDMap.insert(std::pair<int,std::string>(95, "NurbsPatchSurface"));
		elementFromIDMap.insert(std::pair<int,std::string>(96, "NurbsPositionInterpolator"));
		elementFromIDMap.insert(std::pair<int,std::string>(97, "NurbsSet"));
		elementFromIDMap.insert(std::pair<int,std::string>(98, "NurbsSurfaceInterpolator"));
		elementFromIDMap.insert(std::pair<int,std::string>(99, "NurbsSweptSurface"));
		elementFromIDMap.insert(std::pair<int,std::string>(100, "NurbsSwungSurface"));
		elementFromIDMap.insert(std::pair<int,std::string>(101, "NurbsTextureCoordinate"));
		elementFromIDMap.insert(std::pair<int,std::string>(102, "NurbsTrimmedSurface"));
		elementFromIDMap.insert(std::pair<int,std::string>(103, "OrientationInterpolator"));
		elementFromIDMap.insert(std::pair<int,std::string>(104, "PixelTexture"));
		elementFromIDMap.insert(std::pair<int,std::string>(105, "PlaneSensor"));
		elementFromIDMap.insert(std::pair<int,std::string>(106, "PointLight"));
		elementFromIDMap.insert(std::pair<int,std::string>(107, "Polyline2D"));
		elementFromIDMap.insert(std::pair<int,std::string>(108, "Polypoint2D"));
		elementFromIDMap.insert(std::pair<int,std::string>(109, "PositionInterpolator"));
		elementFromIDMap.insert(std::pair<int,std::string>(110, "PositionInterpolator2D"));
		elementFromIDMap.insert(std::pair<int,std::string>(111, "ProtoBody"));
		elementFromIDMap.insert(std::pair<int,std::string>(112, "ProtoDeclare"));
		elementFromIDMap.insert(std::pair<int,std::string>(113, "ProtoInterface"));
		elementFromIDMap.insert(std::pair<int,std::string>(114, "ProximitySensor"));
		elementFromIDMap.insert(std::pair<int,std::string>(115, "ReceiverPdu"));
		elementFromIDMap.insert(std::pair<int,std::string>(116, "Rectangle2D"));
		elementFromIDMap.insert(std::pair<int,std::string>(117, "ScalarInterpolator"));
		elementFromIDMap.insert(std::pair<int,std::string>(118, "Scene"));
		elementFromIDMap.insert(std::pair<int,std::string>(119, "SignalPdu"));
		elementFromIDMap.insert(std::pair<int,std::string>(120, "Sound"));
		elementFromIDMap.insert(std::pair<int,std::string>(121, "SphereSensor"));
		elementFromIDMap.insert(std::pair<int,std::string>(122, "SpotLight"));
		elementFromIDMap.insert(std::pair<int,std::string>(123, "StringSensor"));
		elementFromIDMap.insert(std::pair<int,std::string>(124, "Text"));
		elementFromIDMap.insert(std::pair<int,std::string>(125, "TextureBackground"));
		elementFromIDMap.insert(std::pair<int,std::string>(126, "TextureCoordinateGenerator"));
		elementFromIDMap.insert(std::pair<int,std::string>(127, "TimeSensor"));
		elementFromIDMap.insert(std::pair<int,std::string>(128, "TimeTrigger"));
		elementFromIDMap.insert(std::pair<int,std::string>(129, "TouchSensor"));
		elementFromIDMap.insert(std::pair<int,std::string>(130, "TransmitterPdu"));
		elementFromIDMap.insert(std::pair<int,std::string>(131, "TriangleFanSet"));
		elementFromIDMap.insert(std::pair<int,std::string>(132, "TriangleSet"));
		elementFromIDMap.insert(std::pair<int,std::string>(133, "TriangleSet2D"));
		elementFromIDMap.insert(std::pair<int,std::string>(134, "TriangleStripSet"));
		elementFromIDMap.insert(std::pair<int,std::string>(135, "Viewpoint"));
		elementFromIDMap.insert(std::pair<int,std::string>(136, "VisibilitySensor"));
		elementFromIDMap.insert(std::pair<int,std::string>(137, "WorldInfo"));
		elementFromIDMap.insert(std::pair<int,std::string>(138, "X3D"));
		elementFromIDMap.insert(std::pair<int,std::string>(139, "component"));
		elementFromIDMap.insert(std::pair<int,std::string>(140, "connect"));
		elementFromIDMap.insert(std::pair<int,std::string>(141, "field"));
		elementFromIDMap.insert(std::pair<int,std::string>(142, "head"));
		elementFromIDMap.insert(std::pair<int,std::string>(143, "humanoidBodyType"));
		elementFromIDMap.insert(std::pair<int,std::string>(144, "meta"));
		elementFromIDMap.insert(std::pair<int,std::string>(145, "CADAssembly"));
		elementFromIDMap.insert(std::pair<int,std::string>(146, "CADFace"));
		elementFromIDMap.insert(std::pair<int,std::string>(147, "CADLayer"));
		elementFromIDMap.insert(std::pair<int,std::string>(148, "CADPart"));
		elementFromIDMap.insert(std::pair<int,std::string>(149, "ComposedCubeMapTexture"));
		elementFromIDMap.insert(std::pair<int,std::string>(150, "ComposedShader"));
		elementFromIDMap.insert(std::pair<int,std::string>(151, "ComposedTexture3D"));
		elementFromIDMap.insert(std::pair<int,std::string>(152, "FloatVertexAttribute"));
		elementFromIDMap.insert(std::pair<int,std::string>(153, "FogCoordinate"));
		elementFromIDMap.insert(std::pair<int,std::string>(154, "GeneratedCubeMapTexture"));
		elementFromIDMap.insert(std::pair<int,std::string>(155, "ImageCubeMapTexture"));
		elementFromIDMap.insert(std::pair<int,std::string>(156, "ImageTexture3D"));
		elementFromIDMap.insert(std::pair<int,std::string>(157, "IndexedQuadSet"));
		elementFromIDMap.insert(std::pair<int,std::string>(158, "LocalFog"));
		elementFromIDMap.insert(std::pair<int,std::string>(159, "Matrix3VertexAttribute"));
		elementFromIDMap.insert(std::pair<int,std::string>(160, "Matrix4VertexAttribute"));
		elementFromIDMap.insert(std::pair<int,std::string>(161, "PackagedShader"));
		elementFromIDMap.insert(std::pair<int,std::string>(162, "PixelTexture3D"));
		elementFromIDMap.insert(std::pair<int,std::string>(163, "ProgramShader"));
		elementFromIDMap.insert(std::pair<int,std::string>(164, "QuadSet"));
		elementFromIDMap.insert(std::pair<int,std::string>(165, "ShaderPart"));
		elementFromIDMap.insert(std::pair<int,std::string>(166, "ShaderProgram"));
		elementFromIDMap.insert(std::pair<int,std::string>(167, "TextureCoordinate3D"));
		elementFromIDMap.insert(std::pair<int,std::string>(168, "TextureCoordinate4D"));
		elementFromIDMap.insert(std::pair<int,std::string>(169, "TextureTransform3D"));
		elementFromIDMap.insert(std::pair<int,std::string>(170, "TextureTransformMatrix3D"));


		elementFromStringMap.insert(std::pair<std::string,int>("Shape", 0));
		elementFromStringMap.insert(std::pair<std::string,int>("Appearance", 1));
		elementFromStringMap.insert(std::pair<std::string,int>("Material", 2));
		elementFromStringMap.insert(std::pair<std::string,int>("IndexedFaceSet", 3));
		elementFromStringMap.insert(std::pair<std::string,int>("ProtoInstance", 4));
		elementFromStringMap.insert(std::pair<std::string,int>("Transform", 5));
		elementFromStringMap.insert(std::pair<std::string,int>("ImageTexture", 6));
		elementFromStringMap.insert(std::pair<std::string,int>("TextureTransform", 7));
		elementFromStringMap.insert(std::pair<std::string,int>("Coordinate", 8));
		elementFromStringMap.insert(std::pair<std::string,int>("Normal", 9));
		elementFromStringMap.insert(std::pair<std::string,int>("Color", 10));
		elementFromStringMap.insert(std::pair<std::string,int>("ColorRGBA", 11));
		elementFromStringMap.insert(std::pair<std::string,int>("TextureCoordinate", 12));
		elementFromStringMap.insert(std::pair<std::string,int>("ROUTE", 13));
		elementFromStringMap.insert(std::pair<std::string,int>("fieldValue", 14));
		elementFromStringMap.insert(std::pair<std::string,int>("Group", 15));
		elementFromStringMap.insert(std::pair<std::string,int>("LOD", 16));
		elementFromStringMap.insert(std::pair<std::string,int>("Switch", 17));
		elementFromStringMap.insert(std::pair<std::string,int>("Script", 18));
		elementFromStringMap.insert(std::pair<std::string,int>("IndexedTriangleFanSet", 19));
		elementFromStringMap.insert(std::pair<std::string,int>("IndexedTriangleSet", 20));
		elementFromStringMap.insert(std::pair<std::string,int>("IndexedTriangleStripSet", 21));
		elementFromStringMap.insert(std::pair<std::string,int>("MultiTexture", 22));
		elementFromStringMap.insert(std::pair<std::string,int>("MultiTextureCoordinate", 23));
		elementFromStringMap.insert(std::pair<std::string,int>("MultiTextureTransform", 24));
		elementFromStringMap.insert(std::pair<std::string,int>("IndexedLineSet", 25));
		elementFromStringMap.insert(std::pair<std::string,int>("PointSet", 26));
		elementFromStringMap.insert(std::pair<std::string,int>("StaticGroup", 27));
		elementFromStringMap.insert(std::pair<std::string,int>("Sphere", 28));
		elementFromStringMap.insert(std::pair<std::string,int>("Box", 29));
		elementFromStringMap.insert(std::pair<std::string,int>("Cone", 30));
		elementFromStringMap.insert(std::pair<std::string,int>("Anchor", 31));
		elementFromStringMap.insert(std::pair<std::string,int>("Arc2D", 32));
		elementFromStringMap.insert(std::pair<std::string,int>("ArcClose2D", 33));
		elementFromStringMap.insert(std::pair<std::string,int>("AudioClip", 34));
		elementFromStringMap.insert(std::pair<std::string,int>("Background", 35));
		elementFromStringMap.insert(std::pair<std::string,int>("Billboard", 36));
		elementFromStringMap.insert(std::pair<std::string,int>("BooleanFilter", 37));
		elementFromStringMap.insert(std::pair<std::string,int>("BooleanSequencer", 38));
		elementFromStringMap.insert(std::pair<std::string,int>("BooleanToggle", 39));
		elementFromStringMap.insert(std::pair<std::string,int>("BooleanTrigger", 40));
		elementFromStringMap.insert(std::pair<std::string,int>("Circle2D", 41));
		elementFromStringMap.insert(std::pair<std::string,int>("Collision", 42));
		elementFromStringMap.insert(std::pair<std::string,int>("ColorInterpolator", 43));
		elementFromStringMap.insert(std::pair<std::string,int>("Contour2D", 44));
		elementFromStringMap.insert(std::pair<std::string,int>("ContourPolyline2D", 45));
		elementFromStringMap.insert(std::pair<std::string,int>("CoordinateDouble", 46));
		elementFromStringMap.insert(std::pair<std::string,int>("CoordinateInterpolator", 47));
		elementFromStringMap.insert(std::pair<std::string,int>("CoordinateInterpolator2D", 48));
		elementFromStringMap.insert(std::pair<std::string,int>("Cylinder", 49));
		elementFromStringMap.insert(std::pair<std::string,int>("CylinderSensor", 50));
		elementFromStringMap.insert(std::pair<std::string,int>("DirectionalLight", 51));
		elementFromStringMap.insert(std::pair<std::string,int>("Disk2D", 52));
		elementFromStringMap.insert(std::pair<std::string,int>("EXPORT", 53));
		elementFromStringMap.insert(std::pair<std::string,int>("ElevationGrid", 54));
		elementFromStringMap.insert(std::pair<std::string,int>("EspduTransform", 55));
		elementFromStringMap.insert(std::pair<std::string,int>("ExternProtoDeclare", 56));
		elementFromStringMap.insert(std::pair<std::string,int>("Extrusion", 57));
		elementFromStringMap.insert(std::pair<std::string,int>("FillProperties", 58));
		elementFromStringMap.insert(std::pair<std::string,int>("Fog", 59));
		elementFromStringMap.insert(std::pair<std::string,int>("FontStyle", 60));
		elementFromStringMap.insert(std::pair<std::string,int>("GeoCoordinate", 61));
		elementFromStringMap.insert(std::pair<std::string,int>("GeoElevationGrid", 62));
		elementFromStringMap.insert(std::pair<std::string,int>("GeoLOD", 63));
		elementFromStringMap.insert(std::pair<std::string,int>("GeoLocation", 64));
		elementFromStringMap.insert(std::pair<std::string,int>("GeoMetadata", 65));
		elementFromStringMap.insert(std::pair<std::string,int>("GeoOrigin", 66));
		elementFromStringMap.insert(std::pair<std::string,int>("GeoPositionInterpolator", 67));
		elementFromStringMap.insert(std::pair<std::string,int>("GeoTouchSensor", 68));
		elementFromStringMap.insert(std::pair<std::string,int>("GeoViewpoint", 69));
		elementFromStringMap.insert(std::pair<std::string,int>("HAnimDisplacer", 70));
		elementFromStringMap.insert(std::pair<std::string,int>("HAnimHumanoid", 71));
		elementFromStringMap.insert(std::pair<std::string,int>("HAnimJoint", 72));
		elementFromStringMap.insert(std::pair<std::string,int>("HAnimSegment", 73));
		elementFromStringMap.insert(std::pair<std::string,int>("HAnimSite", 74));
		elementFromStringMap.insert(std::pair<std::string,int>("IMPORT", 75));
		elementFromStringMap.insert(std::pair<std::string,int>("IS", 76));
		elementFromStringMap.insert(std::pair<std::string,int>("Inline", 77));
		elementFromStringMap.insert(std::pair<std::string,int>("IntegerSequencer", 78));
		elementFromStringMap.insert(std::pair<std::string,int>("IntegerTrigger", 79));
		elementFromStringMap.insert(std::pair<std::string,int>("KeySensor", 80));
		elementFromStringMap.insert(std::pair<std::string,int>("LineProperties", 81));
		elementFromStringMap.insert(std::pair<std::string,int>("LineSet", 82));
		elementFromStringMap.insert(std::pair<std::string,int>("LoadSensor", 83));
		elementFromStringMap.insert(std::pair<std::string,int>("MetadataDouble", 84));
		elementFromStringMap.insert(std::pair<std::string,int>("MetadataFloat", 85));
		elementFromStringMap.insert(std::pair<std::string,int>("MetadataInteger", 86));
		elementFromStringMap.insert(std::pair<std::string,int>("MetadataSet", 87));
		elementFromStringMap.insert(std::pair<std::string,int>("MetadataString", 88));
		elementFromStringMap.insert(std::pair<std::string,int>("MovieTexture", 89));
		elementFromStringMap.insert(std::pair<std::string,int>("NavigationInfo", 90));
		elementFromStringMap.insert(std::pair<std::string,int>("NormalInterpolator", 91));
		elementFromStringMap.insert(std::pair<std::string,int>("NurbsCurve", 92));
		elementFromStringMap.insert(std::pair<std::string,int>("NurbsCurve2D", 93));
		elementFromStringMap.insert(std::pair<std::string,int>("NurbsOrientationInterpolator", 94));
		elementFromStringMap.insert(std::pair<std::string,int>("NurbsPatchSurface", 95));
		elementFromStringMap.insert(std::pair<std::string,int>("NurbsPositionInterpolator", 96));
		elementFromStringMap.insert(std::pair<std::string,int>("NurbsSet", 97));
		elementFromStringMap.insert(std::pair<std::string,int>("NurbsSurfaceInterpolator", 98));
		elementFromStringMap.insert(std::pair<std::string,int>("NurbsSweptSurface", 99));
		elementFromStringMap.insert(std::pair<std::string,int>("NurbsSwungSurface", 100));
		elementFromStringMap.insert(std::pair<std::string,int>("NurbsTextureCoordinate", 101));
		elementFromStringMap.insert(std::pair<std::string,int>("NurbsTrimmedSurface", 102));
		elementFromStringMap.insert(std::pair<std::string,int>("OrientationInterpolator", 103));
		elementFromStringMap.insert(std::pair<std::string,int>("PixelTexture", 104));
		elementFromStringMap.insert(std::pair<std::string,int>("PlaneSensor", 105));
		elementFromStringMap.insert(std::pair<std::string,int>("PointLight", 106));
		elementFromStringMap.insert(std::pair<std::string,int>("Polyline2D", 107));
		elementFromStringMap.insert(std::pair<std::string,int>("Polypoint2D", 108));
		elementFromStringMap.insert(std::pair<std::string,int>("PositionInterpolator", 109));
		elementFromStringMap.insert(std::pair<std::string,int>("PositionInterpolator2D", 110));
		elementFromStringMap.insert(std::pair<std::string,int>("ProtoBody", 111));
		elementFromStringMap.insert(std::pair<std::string,int>("ProtoDeclare", 112));
		elementFromStringMap.insert(std::pair<std::string,int>("ProtoInterface", 113));
		elementFromStringMap.insert(std::pair<std::string,int>("ProximitySensor", 114));
		elementFromStringMap.insert(std::pair<std::string,int>("ReceiverPdu", 115));
		elementFromStringMap.insert(std::pair<std::string,int>("Rectangle2D", 116));
		elementFromStringMap.insert(std::pair<std::string,int>("ScalarInterpolator", 117));
		elementFromStringMap.insert(std::pair<std::string,int>("Scene", 118));
		elementFromStringMap.insert(std::pair<std::string,int>("SignalPdu", 119));
		elementFromStringMap.insert(std::pair<std::string,int>("Sound", 120));
		elementFromStringMap.insert(std::pair<std::string,int>("SphereSensor", 121));
		elementFromStringMap.insert(std::pair<std::string,int>("SpotLight", 122));
		elementFromStringMap.insert(std::pair<std::string,int>("StringSensor", 123));
		elementFromStringMap.insert(std::pair<std::string,int>("Text", 124));
		elementFromStringMap.insert(std::pair<std::string,int>("TextureBackground", 125));
		elementFromStringMap.insert(std::pair<std::string,int>("TextureCoordinateGenerator", 126));
		elementFromStringMap.insert(std::pair<std::string,int>("TimeSensor", 127));
		elementFromStringMap.insert(std::pair<std::string,int>("TimeTrigger", 128));
		elementFromStringMap.insert(std::pair<std::string,int>("TouchSensor", 129));
		elementFromStringMap.insert(std::pair<std::string,int>("TransmitterPdu", 130));
		elementFromStringMap.insert(std::pair<std::string,int>("TriangleFanSet", 131));
		elementFromStringMap.insert(std::pair<std::string,int>("TriangleSet", 132));
		elementFromStringMap.insert(std::pair<std::string,int>("TriangleSet2D", 133));
		elementFromStringMap.insert(std::pair<std::string,int>("TriangleStripSet", 134));
		elementFromStringMap.insert(std::pair<std::string,int>("Viewpoint", 135));
		elementFromStringMap.insert(std::pair<std::string,int>("VisibilitySensor", 136));
		elementFromStringMap.insert(std::pair<std::string,int>("WorldInfo", 137));
		elementFromStringMap.insert(std::pair<std::string,int>("X3D", 138));
		elementFromStringMap.insert(std::pair<std::string,int>("component", 139));
		elementFromStringMap.insert(std::pair<std::string,int>("connect", 140));
		elementFromStringMap.insert(std::pair<std::string,int>("field", 141));
		elementFromStringMap.insert(std::pair<std::string,int>("head", 142));
		elementFromStringMap.insert(std::pair<std::string,int>("humanoidBodyType", 143));
		elementFromStringMap.insert(std::pair<std::string,int>("meta", 144));
		elementFromStringMap.insert(std::pair<std::string,int>("CADAssembly", 145));
		elementFromStringMap.insert(std::pair<std::string,int>("CADFace", 146));
		elementFromStringMap.insert(std::pair<std::string,int>("CADLayer", 147));
		elementFromStringMap.insert(std::pair<std::string,int>("CADPart", 148));
		elementFromStringMap.insert(std::pair<std::string,int>("ComposedCubeMapTexture", 149));
		elementFromStringMap.insert(std::pair<std::string,int>("ComposedShader", 150));
		elementFromStringMap.insert(std::pair<std::string,int>("ComposedTexture3D", 151));
		elementFromStringMap.insert(std::pair<std::string,int>("FloatVertexAttribute", 152));
		elementFromStringMap.insert(std::pair<std::string,int>("FogCoordinate", 153));
		elementFromStringMap.insert(std::pair<std::string,int>("GeneratedCubeMapTexture", 154));
		elementFromStringMap.insert(std::pair<std::string,int>("ImageCubeMapTexture", 155));
		elementFromStringMap.insert(std::pair<std::string,int>("ImageTexture3D", 156));
		elementFromStringMap.insert(std::pair<std::string,int>("IndexedQuadSet", 157));
		elementFromStringMap.insert(std::pair<std::string,int>("LocalFog", 158));
		elementFromStringMap.insert(std::pair<std::string,int>("Matrix3VertexAttribute", 159));
		elementFromStringMap.insert(std::pair<std::string,int>("Matrix4VertexAttribute", 160));
		elementFromStringMap.insert(std::pair<std::string,int>("PackagedShader", 161));
		elementFromStringMap.insert(std::pair<std::string,int>("PixelTexture3D", 162));
		elementFromStringMap.insert(std::pair<std::string,int>("ProgramShader", 163));
		elementFromStringMap.insert(std::pair<std::string,int>("QuadSet", 164));
		elementFromStringMap.insert(std::pair<std::string,int>("ShaderPart", 165));
		elementFromStringMap.insert(std::pair<std::string,int>("ShaderProgram", 166));
		elementFromStringMap.insert(std::pair<std::string,int>("TextureCoordinate3D", 167));
		elementFromStringMap.insert(std::pair<std::string,int>("TextureCoordinate4D", 168));
		elementFromStringMap.insert(std::pair<std::string,int>("TextureTransform3D", 169));
		elementFromStringMap.insert(std::pair<std::string,int>("TextureTransformMatrix3D", 170));


		attributeFromIDMap.insert(std::pair<int,std::string>(0, "DEF"));
		attributeFromIDMap.insert(std::pair<int,std::string>(1, "USE"));
		attributeFromIDMap.insert(std::pair<int,std::string>(2, "containerField"));
		attributeFromIDMap.insert(std::pair<int,std::string>(3, "fromNode"));
		attributeFromIDMap.insert(std::pair<int,std::string>(4, "fromField"));
		attributeFromIDMap.insert(std::pair<int,std::string>(5, "toNode"));
		attributeFromIDMap.insert(std::pair<int,std::string>(6, "toField"));
		attributeFromIDMap.insert(std::pair<int,std::string>(7, "name"));
		attributeFromIDMap.insert(std::pair<int,std::string>(8, "value"));
		attributeFromIDMap.insert(std::pair<int,std::string>(9, "color"));
		attributeFromIDMap.insert(std::pair<int,std::string>(10, "colorIndex"));
		attributeFromIDMap.insert(std::pair<int,std::string>(11, "coordIndex"));
		attributeFromIDMap.insert(std::pair<int,std::string>(12, "texCoordIndex"));
		attributeFromIDMap.insert(std::pair<int,std::string>(13, "normalIndex"));
		attributeFromIDMap.insert(std::pair<int,std::string>(14, "colorPerVertex"));
		attributeFromIDMap.insert(std::pair<int,std::string>(15, "normalPerVertex"));
		attributeFromIDMap.insert(std::pair<int,std::string>(16, "rotation"));
		attributeFromIDMap.insert(std::pair<int,std::string>(17, "scale"));
		attributeFromIDMap.insert(std::pair<int,std::string>(18, "center"));
		attributeFromIDMap.insert(std::pair<int,std::string>(19, "scaleOrientation"));
		attributeFromIDMap.insert(std::pair<int,std::string>(20, "translation"));
		attributeFromIDMap.insert(std::pair<int,std::string>(21, "url"));
		attributeFromIDMap.insert(std::pair<int,std::string>(22, "repeatS"));
		attributeFromIDMap.insert(std::pair<int,std::string>(23, "repeatT"));
		attributeFromIDMap.insert(std::pair<int,std::string>(24, "point"));
		attributeFromIDMap.insert(std::pair<int,std::string>(25, "vector"));
		attributeFromIDMap.insert(std::pair<int,std::string>(26, "range"));
		attributeFromIDMap.insert(std::pair<int,std::string>(27, "ambientIntensity"));
		attributeFromIDMap.insert(std::pair<int,std::string>(28, "diffuseColor"));
		attributeFromIDMap.insert(std::pair<int,std::string>(29, "emissiveColor"));
		attributeFromIDMap.insert(std::pair<int,std::string>(30, "shininess"));
		attributeFromIDMap.insert(std::pair<int,std::string>(31, "specularColor"));
		attributeFromIDMap.insert(std::pair<int,std::string>(32, "transparency"));
		attributeFromIDMap.insert(std::pair<int,std::string>(33, "whichChoice"));
		attributeFromIDMap.insert(std::pair<int,std::string>(34, "index"));
		attributeFromIDMap.insert(std::pair<int,std::string>(35, "mode"));
		attributeFromIDMap.insert(std::pair<int,std::string>(36, "source"));
		attributeFromIDMap.insert(std::pair<int,std::string>(37, "function"));
		attributeFromIDMap.insert(std::pair<int,std::string>(38, "alpha"));
		attributeFromIDMap.insert(std::pair<int,std::string>(39, "vertexCount"));
		attributeFromIDMap.insert(std::pair<int,std::string>(40, "radius"));
		attributeFromIDMap.insert(std::pair<int,std::string>(41, "size"));
		attributeFromIDMap.insert(std::pair<int,std::string>(42, "height"));
		attributeFromIDMap.insert(std::pair<int,std::string>(43, "solid"));
		attributeFromIDMap.insert(std::pair<int,std::string>(44, "ccw"));
		attributeFromIDMap.insert(std::pair<int,std::string>(45, "key"));
		attributeFromIDMap.insert(std::pair<int,std::string>(46, "keyValue"));
		attributeFromIDMap.insert(std::pair<int,std::string>(47, "enabled"));
		attributeFromIDMap.insert(std::pair<int,std::string>(48, "direction"));
		attributeFromIDMap.insert(std::pair<int,std::string>(49, "position"));
		attributeFromIDMap.insert(std::pair<int,std::string>(50, "orientation"));
		attributeFromIDMap.insert(std::pair<int,std::string>(51, "bboxCenter"));
		attributeFromIDMap.insert(std::pair<int,std::string>(52, "bboxSize"));
		attributeFromIDMap.insert(std::pair<int,std::string>(53, "AS"));
		attributeFromIDMap.insert(std::pair<int,std::string>(54, "InlineDEF"));
		attributeFromIDMap.insert(std::pair<int,std::string>(55, "accessType"));
		attributeFromIDMap.insert(std::pair<int,std::string>(56, "actionKeyPress"));
		attributeFromIDMap.insert(std::pair<int,std::string>(57, "actionKeyRelease"));
		attributeFromIDMap.insert(std::pair<int,std::string>(58, "address"));
		attributeFromIDMap.insert(std::pair<int,std::string>(59, "altKey"));
		attributeFromIDMap.insert(std::pair<int,std::string>(60, "antennaLocation"));
		attributeFromIDMap.insert(std::pair<int,std::string>(61, "antennaPatternLength"));
		attributeFromIDMap.insert(std::pair<int,std::string>(62, "antennaPatternType"));
		attributeFromIDMap.insert(std::pair<int,std::string>(63, "applicationID"));
		attributeFromIDMap.insert(std::pair<int,std::string>(64, "articulationParameterArray"));
		attributeFromIDMap.insert(std::pair<int,std::string>(65, "articulationParameterChangeIndicatorArray"));
		attributeFromIDMap.insert(std::pair<int,std::string>(66, "articulationParameterCount"));
		attributeFromIDMap.insert(std::pair<int,std::string>(67, "articulationParameterDesignatorArray"));
		attributeFromIDMap.insert(std::pair<int,std::string>(68, "articulationParameterIdPartAttachedArray"));
		attributeFromIDMap.insert(std::pair<int,std::string>(69, "articulationParameterTypeArray"));
		attributeFromIDMap.insert(std::pair<int,std::string>(70, "attenuation"));
		attributeFromIDMap.insert(std::pair<int,std::string>(71, "autoOffset"));
		attributeFromIDMap.insert(std::pair<int,std::string>(72, "avatarSize"));
		attributeFromIDMap.insert(std::pair<int,std::string>(73, "axisOfRotation"));
		attributeFromIDMap.insert(std::pair<int,std::string>(74, "backUrl"));
		attributeFromIDMap.insert(std::pair<int,std::string>(75, "beamWidth"));
		attributeFromIDMap.insert(std::pair<int,std::string>(76, "beginCap"));
		attributeFromIDMap.insert(std::pair<int,std::string>(77, "bindTime"));
		attributeFromIDMap.insert(std::pair<int,std::string>(78, "bottom"));
		attributeFromIDMap.insert(std::pair<int,std::string>(79, "bottomRadius"));
		attributeFromIDMap.insert(std::pair<int,std::string>(80, "bottomUrl"));
		attributeFromIDMap.insert(std::pair<int,std::string>(81, "centerOfMass"));
		attributeFromIDMap.insert(std::pair<int,std::string>(82, "centerOfRotation"));
		attributeFromIDMap.insert(std::pair<int,std::string>(83, "child1Url"));
		attributeFromIDMap.insert(std::pair<int,std::string>(84, "child2Url"));
		attributeFromIDMap.insert(std::pair<int,std::string>(85, "child3Url"));
		attributeFromIDMap.insert(std::pair<int,std::string>(86, "child4Url"));
		attributeFromIDMap.insert(std::pair<int,std::string>(87, "class"));
		attributeFromIDMap.insert(std::pair<int,std::string>(88, "closureType"));
		attributeFromIDMap.insert(std::pair<int,std::string>(89, "collideTime"));
		attributeFromIDMap.insert(std::pair<int,std::string>(90, "content"));
		attributeFromIDMap.insert(std::pair<int,std::string>(91, "controlKey"));
		attributeFromIDMap.insert(std::pair<int,std::string>(92, "controlPoint"));
		attributeFromIDMap.insert(std::pair<int,std::string>(93, "convex"));
		attributeFromIDMap.insert(std::pair<int,std::string>(94, "coordinateSystem"));
		attributeFromIDMap.insert(std::pair<int,std::string>(95, "copyright"));
		attributeFromIDMap.insert(std::pair<int,std::string>(96, "creaseAngle"));
		attributeFromIDMap.insert(std::pair<int,std::string>(97, "crossSection"));
		attributeFromIDMap.insert(std::pair<int,std::string>(98, "cryptoKeyID"));
		attributeFromIDMap.insert(std::pair<int,std::string>(99, "cryptoSystem"));
		attributeFromIDMap.insert(std::pair<int,std::string>(100, "cutOffAngle"));
		attributeFromIDMap.insert(std::pair<int,std::string>(101, "cycleInterval"));
		attributeFromIDMap.insert(std::pair<int,std::string>(102, "cycleTime"));
		attributeFromIDMap.insert(std::pair<int,std::string>(103, "data"));
		attributeFromIDMap.insert(std::pair<int,std::string>(104, "dataFormat"));
		attributeFromIDMap.insert(std::pair<int,std::string>(105, "dataLength"));
		attributeFromIDMap.insert(std::pair<int,std::string>(106, "dataUrl"));
		attributeFromIDMap.insert(std::pair<int,std::string>(107, "date"));
		attributeFromIDMap.insert(std::pair<int,std::string>(108, "deadReckoning"));
		attributeFromIDMap.insert(std::pair<int,std::string>(109, "deletionAllowed"));
		attributeFromIDMap.insert(std::pair<int,std::string>(110, "description"));
		attributeFromIDMap.insert(std::pair<int,std::string>(111, "detonateTime"));
		attributeFromIDMap.insert(std::pair<int,std::string>(112, "dir"));
		attributeFromIDMap.insert(std::pair<int,std::string>(113, "directOutput"));
		attributeFromIDMap.insert(std::pair<int,std::string>(114, "diskAngle"));
		attributeFromIDMap.insert(std::pair<int,std::string>(115, "displacements"));
		attributeFromIDMap.insert(std::pair<int,std::string>(116, "documentation"));
		attributeFromIDMap.insert(std::pair<int,std::string>(117, "elapsedTime"));
		attributeFromIDMap.insert(std::pair<int,std::string>(118, "ellipsoid"));
		attributeFromIDMap.insert(std::pair<int,std::string>(119, "encodingScheme"));
		attributeFromIDMap.insert(std::pair<int,std::string>(120, "endAngle"));
		attributeFromIDMap.insert(std::pair<int,std::string>(121, "endCap"));
		attributeFromIDMap.insert(std::pair<int,std::string>(122, "enterTime"));
		attributeFromIDMap.insert(std::pair<int,std::string>(123, "enteredText"));
		attributeFromIDMap.insert(std::pair<int,std::string>(124, "entityCategory"));
		attributeFromIDMap.insert(std::pair<int,std::string>(125, "entityCountry"));
		attributeFromIDMap.insert(std::pair<int,std::string>(126, "entityDomain"));
		attributeFromIDMap.insert(std::pair<int,std::string>(127, "entityExtra"));
		attributeFromIDMap.insert(std::pair<int,std::string>(128, "entityID"));
		attributeFromIDMap.insert(std::pair<int,std::string>(129, "entityKind"));
		attributeFromIDMap.insert(std::pair<int,std::string>(130, "entitySpecific"));
		attributeFromIDMap.insert(std::pair<int,std::string>(131, "entitySubCategory"));
		attributeFromIDMap.insert(std::pair<int,std::string>(132, "exitTime"));
		attributeFromIDMap.insert(std::pair<int,std::string>(133, "extent"));
		attributeFromIDMap.insert(std::pair<int,std::string>(134, "family"));
		attributeFromIDMap.insert(std::pair<int,std::string>(135, "fanCount"));
		attributeFromIDMap.insert(std::pair<int,std::string>(136, "fieldOfView"));
		attributeFromIDMap.insert(std::pair<int,std::string>(137, "filled"));
		attributeFromIDMap.insert(std::pair<int,std::string>(138, "finalText"));
		attributeFromIDMap.insert(std::pair<int,std::string>(139, "fireMissionIndex"));
		attributeFromIDMap.insert(std::pair<int,std::string>(140, "fired1"));
		attributeFromIDMap.insert(std::pair<int,std::string>(141, "fired2"));
		attributeFromIDMap.insert(std::pair<int,std::string>(142, "firedTime"));
		attributeFromIDMap.insert(std::pair<int,std::string>(143, "firingRange"));
		attributeFromIDMap.insert(std::pair<int,std::string>(144, "firingRate"));
		attributeFromIDMap.insert(std::pair<int,std::string>(145, "fogType"));
		attributeFromIDMap.insert(std::pair<int,std::string>(146, "forceID"));
		attributeFromIDMap.insert(std::pair<int,std::string>(147, "frequency"));
		attributeFromIDMap.insert(std::pair<int,std::string>(148, "frontUrl"));
		attributeFromIDMap.insert(std::pair<int,std::string>(149, "fuse"));
		attributeFromIDMap.insert(std::pair<int,std::string>(150, "geoCoords"));
		attributeFromIDMap.insert(std::pair<int,std::string>(151, "geoGridOrigin"));
		attributeFromIDMap.insert(std::pair<int,std::string>(152, "geoSystem"));
		attributeFromIDMap.insert(std::pair<int,std::string>(153, "groundAngle"));
		attributeFromIDMap.insert(std::pair<int,std::string>(154, "groundColor"));
		attributeFromIDMap.insert(std::pair<int,std::string>(155, "hatchColor"));
		attributeFromIDMap.insert(std::pair<int,std::string>(156, "hatchStyle"));
		attributeFromIDMap.insert(std::pair<int,std::string>(157, "hatched"));
		attributeFromIDMap.insert(std::pair<int,std::string>(158, "headlight"));
		attributeFromIDMap.insert(std::pair<int,std::string>(159, "horizontal"));
		attributeFromIDMap.insert(std::pair<int,std::string>(160, "horizontalDatum"));
		attributeFromIDMap.insert(std::pair<int,std::string>(161, "http-equiv"));
		attributeFromIDMap.insert(std::pair<int,std::string>(162, "image"));
		attributeFromIDMap.insert(std::pair<int,std::string>(163, "importedDEF"));
		attributeFromIDMap.insert(std::pair<int,std::string>(164, "info"));
		attributeFromIDMap.insert(std::pair<int,std::string>(165, "innerRadius"));
		attributeFromIDMap.insert(std::pair<int,std::string>(166, "inputFalse"));
		attributeFromIDMap.insert(std::pair<int,std::string>(167, "inputNegate"));
		attributeFromIDMap.insert(std::pair<int,std::string>(168, "inputSource"));
		attributeFromIDMap.insert(std::pair<int,std::string>(169, "inputTrue"));
		attributeFromIDMap.insert(std::pair<int,std::string>(170, "integerKey"));
		attributeFromIDMap.insert(std::pair<int,std::string>(171, "intensity"));
		attributeFromIDMap.insert(std::pair<int,std::string>(172, "jump"));
		attributeFromIDMap.insert(std::pair<int,std::string>(173, "justify"));
		attributeFromIDMap.insert(std::pair<int,std::string>(174, "keyPress"));
		attributeFromIDMap.insert(std::pair<int,std::string>(175, "keyRelease"));
		attributeFromIDMap.insert(std::pair<int,std::string>(176, "knot"));
		attributeFromIDMap.insert(std::pair<int,std::string>(177, "lang"));
		attributeFromIDMap.insert(std::pair<int,std::string>(178, "language"));
		attributeFromIDMap.insert(std::pair<int,std::string>(179, "leftToRight"));
		attributeFromIDMap.insert(std::pair<int,std::string>(180, "leftUrl"));
		attributeFromIDMap.insert(std::pair<int,std::string>(181, "length"));
		attributeFromIDMap.insert(std::pair<int,std::string>(182, "lengthOfModulationParameters"));
		attributeFromIDMap.insert(std::pair<int,std::string>(183, "level"));
		attributeFromIDMap.insert(std::pair<int,std::string>(184, "limitOrientation"));
		attributeFromIDMap.insert(std::pair<int,std::string>(185, "lineSegments"));
		attributeFromIDMap.insert(std::pair<int,std::string>(186, "linearAcceleration"));
		attributeFromIDMap.insert(std::pair<int,std::string>(187, "linearVelocity"));
		attributeFromIDMap.insert(std::pair<int,std::string>(188, "linetype"));
		attributeFromIDMap.insert(std::pair<int,std::string>(189, "linewidthScaleFactor"));
		attributeFromIDMap.insert(std::pair<int,std::string>(190, "llimit"));
		attributeFromIDMap.insert(std::pair<int,std::string>(191, "load"));
		attributeFromIDMap.insert(std::pair<int,std::string>(192, "loadTime"));
		attributeFromIDMap.insert(std::pair<int,std::string>(193, "localDEF"));
		attributeFromIDMap.insert(std::pair<int,std::string>(194, "location"));
		attributeFromIDMap.insert(std::pair<int,std::string>(195, "loop"));
		attributeFromIDMap.insert(std::pair<int,std::string>(196, "marking"));
		attributeFromIDMap.insert(std::pair<int,std::string>(197, "mass"));
		attributeFromIDMap.insert(std::pair<int,std::string>(198, "maxAngle"));
		attributeFromIDMap.insert(std::pair<int,std::string>(199, "maxBack"));
		attributeFromIDMap.insert(std::pair<int,std::string>(200, "maxExtent"));
		attributeFromIDMap.insert(std::pair<int,std::string>(201, "maxFront"));
		attributeFromIDMap.insert(std::pair<int,std::string>(202, "maxPosition"));
		attributeFromIDMap.insert(std::pair<int,std::string>(203, "metadataFormat"));
		attributeFromIDMap.insert(std::pair<int,std::string>(204, "minAngle"));
		attributeFromIDMap.insert(std::pair<int,std::string>(205, "minBack"));
		attributeFromIDMap.insert(std::pair<int,std::string>(206, "minFront"));
		attributeFromIDMap.insert(std::pair<int,std::string>(207, "minPosition"));
		attributeFromIDMap.insert(std::pair<int,std::string>(208, "modulationTypeDetail"));
		attributeFromIDMap.insert(std::pair<int,std::string>(209, "modulationTypeMajor"));
		attributeFromIDMap.insert(std::pair<int,std::string>(210, "modulationTypeSpreadSpectrum"));
		attributeFromIDMap.insert(std::pair<int,std::string>(211, "modulationTypeSystem"));
		attributeFromIDMap.insert(std::pair<int,std::string>(212, "momentsOfInertia"));
		attributeFromIDMap.insert(std::pair<int,std::string>(213, "multicastRelayHost"));
		attributeFromIDMap.insert(std::pair<int,std::string>(214, "multicastRelayPort"));
		attributeFromIDMap.insert(std::pair<int,std::string>(215, "munitionApplicationID"));
		attributeFromIDMap.insert(std::pair<int,std::string>(216, "munitionEndPoint"));
		attributeFromIDMap.insert(std::pair<int,std::string>(217, "munitionEntityID"));
		attributeFromIDMap.insert(std::pair<int,std::string>(218, "munitionQuantity"));
		attributeFromIDMap.insert(std::pair<int,std::string>(219, "munitionSiteID"));
		attributeFromIDMap.insert(std::pair<int,std::string>(220, "munitionStartPoint"));
		attributeFromIDMap.insert(std::pair<int,std::string>(221, "mustEvaluate"));
		attributeFromIDMap.insert(std::pair<int,std::string>(222, "navType"));
		attributeFromIDMap.insert(std::pair<int,std::string>(223, "networkMode"));
		attributeFromIDMap.insert(std::pair<int,std::string>(224, "next"));
		attributeFromIDMap.insert(std::pair<int,std::string>(225, "nodeField"));
		attributeFromIDMap.insert(std::pair<int,std::string>(226, "offset"));
		attributeFromIDMap.insert(std::pair<int,std::string>(227, "on"));
		attributeFromIDMap.insert(std::pair<int,std::string>(228, "order"));
		attributeFromIDMap.insert(std::pair<int,std::string>(229, "originator"));
		attributeFromIDMap.insert(std::pair<int,std::string>(230, "outerRadius"));
		attributeFromIDMap.insert(std::pair<int,std::string>(231, "parameter"));
		attributeFromIDMap.insert(std::pair<int,std::string>(232, "pauseTime"));
		attributeFromIDMap.insert(std::pair<int,std::string>(233, "pitch"));
		attributeFromIDMap.insert(std::pair<int,std::string>(234, "points"));
		attributeFromIDMap.insert(std::pair<int,std::string>(235, "port"));
		attributeFromIDMap.insert(std::pair<int,std::string>(236, "power"));
		attributeFromIDMap.insert(std::pair<int,std::string>(237, "previous"));
		attributeFromIDMap.insert(std::pair<int,std::string>(238, "priority"));
		attributeFromIDMap.insert(std::pair<int,std::string>(239, "profile"));
		attributeFromIDMap.insert(std::pair<int,std::string>(240, "progress"));
		attributeFromIDMap.insert(std::pair<int,std::string>(241, "protoField"));
		attributeFromIDMap.insert(std::pair<int,std::string>(242, "radioEntityTypeCategory"));
		attributeFromIDMap.insert(std::pair<int,std::string>(243, "radioEntityTypeCountry"));
		attributeFromIDMap.insert(std::pair<int,std::string>(244, "radioEntityTypeDomain"));
		attributeFromIDMap.insert(std::pair<int,std::string>(245, "radioEntityTypeKind"));
		attributeFromIDMap.insert(std::pair<int,std::string>(246, "radioEntityTypeNomenclature"));
		attributeFromIDMap.insert(std::pair<int,std::string>(247, "radioEntityTypeNomenclatureVersion"));
		attributeFromIDMap.insert(std::pair<int,std::string>(248, "radioID"));
		attributeFromIDMap.insert(std::pair<int,std::string>(249, "readInterval"));
		attributeFromIDMap.insert(std::pair<int,std::string>(250, "receivedPower"));
		attributeFromIDMap.insert(std::pair<int,std::string>(251, "receiverState"));
		attributeFromIDMap.insert(std::pair<int,std::string>(252, "reference"));
		attributeFromIDMap.insert(std::pair<int,std::string>(253, "relativeAntennaLocation"));
		attributeFromIDMap.insert(std::pair<int,std::string>(254, "resolution"));
		attributeFromIDMap.insert(std::pair<int,std::string>(255, "resumeTime"));
		attributeFromIDMap.insert(std::pair<int,std::string>(256, "rightUrl"));
		attributeFromIDMap.insert(std::pair<int,std::string>(257, "rootUrl"));
		attributeFromIDMap.insert(std::pair<int,std::string>(258, "rotateYUp"));
		attributeFromIDMap.insert(std::pair<int,std::string>(259, "rtpHeaderExpected"));
		attributeFromIDMap.insert(std::pair<int,std::string>(260, "sampleRate"));
		attributeFromIDMap.insert(std::pair<int,std::string>(261, "samples"));
		attributeFromIDMap.insert(std::pair<int,std::string>(262, "shiftKey"));
		attributeFromIDMap.insert(std::pair<int,std::string>(263, "side"));
		attributeFromIDMap.insert(std::pair<int,std::string>(264, "siteID"));
		attributeFromIDMap.insert(std::pair<int,std::string>(265, "skinCoordIndex"));
		attributeFromIDMap.insert(std::pair<int,std::string>(266, "skinCoordWeight"));
		attributeFromIDMap.insert(std::pair<int,std::string>(267, "skyAngle"));
		attributeFromIDMap.insert(std::pair<int,std::string>(268, "skyColor"));
		attributeFromIDMap.insert(std::pair<int,std::string>(269, "spacing"));
		attributeFromIDMap.insert(std::pair<int,std::string>(270, "spatialize"));
		attributeFromIDMap.insert(std::pair<int,std::string>(271, "speed"));
		attributeFromIDMap.insert(std::pair<int,std::string>(272, "speedFactor"));
		attributeFromIDMap.insert(std::pair<int,std::string>(273, "spine"));
		attributeFromIDMap.insert(std::pair<int,std::string>(274, "startAngle"));
		attributeFromIDMap.insert(std::pair<int,std::string>(275, "startTime"));
		attributeFromIDMap.insert(std::pair<int,std::string>(276, "stiffness"));
		attributeFromIDMap.insert(std::pair<int,std::string>(277, "stopTime"));
		attributeFromIDMap.insert(std::pair<int,std::string>(278, "string"));
		attributeFromIDMap.insert(std::pair<int,std::string>(279, "stripCount"));
		attributeFromIDMap.insert(std::pair<int,std::string>(280, "style"));
		attributeFromIDMap.insert(std::pair<int,std::string>(281, "summary"));
		attributeFromIDMap.insert(std::pair<int,std::string>(282, "tdlType"));
		attributeFromIDMap.insert(std::pair<int,std::string>(283, "tessellation"));
		attributeFromIDMap.insert(std::pair<int,std::string>(284, "tessellationScale"));
		attributeFromIDMap.insert(std::pair<int,std::string>(285, "time"));
		attributeFromIDMap.insert(std::pair<int,std::string>(286, "timeOut"));
		attributeFromIDMap.insert(std::pair<int,std::string>(287, "timestamp"));
		attributeFromIDMap.insert(std::pair<int,std::string>(288, "title"));
		attributeFromIDMap.insert(std::pair<int,std::string>(289, "toggle"));
		attributeFromIDMap.insert(std::pair<int,std::string>(290, "top"));
		attributeFromIDMap.insert(std::pair<int,std::string>(291, "topToBottom"));
		attributeFromIDMap.insert(std::pair<int,std::string>(292, "topUrl"));
		attributeFromIDMap.insert(std::pair<int,std::string>(293, "touchTime"));
		attributeFromIDMap.insert(std::pair<int,std::string>(294, "transmitFrequencyBandwidth"));
		attributeFromIDMap.insert(std::pair<int,std::string>(295, "transmitState"));
		attributeFromIDMap.insert(std::pair<int,std::string>(296, "transmitterApplicationID"));
		attributeFromIDMap.insert(std::pair<int,std::string>(297, "transmitterEntityID"));
		attributeFromIDMap.insert(std::pair<int,std::string>(298, "transmitterRadioID"));
		attributeFromIDMap.insert(std::pair<int,std::string>(299, "transmitterSiteID"));
		attributeFromIDMap.insert(std::pair<int,std::string>(300, "transparent"));
		attributeFromIDMap.insert(std::pair<int,std::string>(301, "triggerTime"));
		attributeFromIDMap.insert(std::pair<int,std::string>(302, "triggerTrue"));
		attributeFromIDMap.insert(std::pair<int,std::string>(303, "triggerValue"));
		attributeFromIDMap.insert(std::pair<int,std::string>(304, "type"));
		attributeFromIDMap.insert(std::pair<int,std::string>(305, "uDimension"));
		attributeFromIDMap.insert(std::pair<int,std::string>(306, "uKnot"));
		attributeFromIDMap.insert(std::pair<int,std::string>(307, "uOrder"));
		attributeFromIDMap.insert(std::pair<int,std::string>(308, "uTessellation"));
		attributeFromIDMap.insert(std::pair<int,std::string>(309, "ulimit"));
		attributeFromIDMap.insert(std::pair<int,std::string>(310, "vDimension"));
		attributeFromIDMap.insert(std::pair<int,std::string>(311, "vKnot"));
		attributeFromIDMap.insert(std::pair<int,std::string>(312, "vOrder"));
		attributeFromIDMap.insert(std::pair<int,std::string>(313, "vTessellation"));
		attributeFromIDMap.insert(std::pair<int,std::string>(314, "version"));
		attributeFromIDMap.insert(std::pair<int,std::string>(315, "verticalDatum"));
		attributeFromIDMap.insert(std::pair<int,std::string>(316, "vertices"));
		attributeFromIDMap.insert(std::pair<int,std::string>(317, "visibilityLimit"));
		attributeFromIDMap.insert(std::pair<int,std::string>(318, "visibilityRange"));
		attributeFromIDMap.insert(std::pair<int,std::string>(319, "warhead"));
		attributeFromIDMap.insert(std::pair<int,std::string>(320, "weight"));
		attributeFromIDMap.insert(std::pair<int,std::string>(321, "whichGeometry"));
		attributeFromIDMap.insert(std::pair<int,std::string>(322, "writeInterval"));
		attributeFromIDMap.insert(std::pair<int,std::string>(323, "xDimension"));
		attributeFromIDMap.insert(std::pair<int,std::string>(324, "xSpacing"));
		attributeFromIDMap.insert(std::pair<int,std::string>(325, "yScale"));
		attributeFromIDMap.insert(std::pair<int,std::string>(326, "zDimension"));
		attributeFromIDMap.insert(std::pair<int,std::string>(327, "zSpacing"));
		attributeFromIDMap.insert(std::pair<int,std::string>(328, "visible"));
		attributeFromIDMap.insert(std::pair<int,std::string>(329, "repeatR"));
		attributeFromIDMap.insert(std::pair<int,std::string>(330, "texture"));
		attributeFromIDMap.insert(std::pair<int,std::string>(331, "back"));
		attributeFromIDMap.insert(std::pair<int,std::string>(332, "front"));
		attributeFromIDMap.insert(std::pair<int,std::string>(333, "left"));
		attributeFromIDMap.insert(std::pair<int,std::string>(334, "right"));
		attributeFromIDMap.insert(std::pair<int,std::string>(335, "parts"));
		attributeFromIDMap.insert(std::pair<int,std::string>(336, "isSelected"));
		attributeFromIDMap.insert(std::pair<int,std::string>(337, "isValid"));
		attributeFromIDMap.insert(std::pair<int,std::string>(338, "numComponents"));
		attributeFromIDMap.insert(std::pair<int,std::string>(339, "depth"));
		attributeFromIDMap.insert(std::pair<int,std::string>(340, "update"));
		attributeFromIDMap.insert(std::pair<int,std::string>(341, "fogCoord"));
		attributeFromIDMap.insert(std::pair<int,std::string>(342, "texCoord"));
		attributeFromIDMap.insert(std::pair<int,std::string>(343, "activate"));
		attributeFromIDMap.insert(std::pair<int,std::string>(344, "programs"));
		attributeFromIDMap.insert(std::pair<int,std::string>(345, "matrix"));


		attributeFromStringMap.insert(std::pair<std::string,int>("DEF", 0));
		attributeFromStringMap.insert(std::pair<std::string,int>("USE", 1));
		attributeFromStringMap.insert(std::pair<std::string,int>("containerField", 2));
		attributeFromStringMap.insert(std::pair<std::string,int>("fromNode", 3));
		attributeFromStringMap.insert(std::pair<std::string,int>("fromField", 4));
		attributeFromStringMap.insert(std::pair<std::string,int>("toNode", 5));
		attributeFromStringMap.insert(std::pair<std::string,int>("toField", 6));
		attributeFromStringMap.insert(std::pair<std::string,int>("name", 7));
		attributeFromStringMap.insert(std::pair<std::string,int>("value", 8));
		attributeFromStringMap.insert(std::pair<std::string,int>("color", 9));
		attributeFromStringMap.insert(std::pair<std::string,int>("colorIndex", 10));
		attributeFromStringMap.insert(std::pair<std::string,int>("coordIndex", 11));
		attributeFromStringMap.insert(std::pair<std::string,int>("texCoordIndex", 12));
		attributeFromStringMap.insert(std::pair<std::string,int>("normalIndex", 13));
		attributeFromStringMap.insert(std::pair<std::string,int>("colorPerVertex", 14));
		attributeFromStringMap.insert(std::pair<std::string,int>("normalPerVertex", 15));
		attributeFromStringMap.insert(std::pair<std::string,int>("rotation", 16));
		attributeFromStringMap.insert(std::pair<std::string,int>("scale", 17));
		attributeFromStringMap.insert(std::pair<std::string,int>("center", 18));
		attributeFromStringMap.insert(std::pair<std::string,int>("scaleOrientation", 19));
		attributeFromStringMap.insert(std::pair<std::string,int>("translation", 20));
		attributeFromStringMap.insert(std::pair<std::string,int>("url", 21));
		attributeFromStringMap.insert(std::pair<std::string,int>("repeatS", 22));
		attributeFromStringMap.insert(std::pair<std::string,int>("repeatT", 23));
		attributeFromStringMap.insert(std::pair<std::string,int>("point", 24));
		attributeFromStringMap.insert(std::pair<std::string,int>("vector", 25));
		attributeFromStringMap.insert(std::pair<std::string,int>("range", 26));
		attributeFromStringMap.insert(std::pair<std::string,int>("ambientIntensity", 27));
		attributeFromStringMap.insert(std::pair<std::string,int>("diffuseColor", 28));
		attributeFromStringMap.insert(std::pair<std::string,int>("emissiveColor", 29));
		attributeFromStringMap.insert(std::pair<std::string,int>("shininess", 30));
		attributeFromStringMap.insert(std::pair<std::string,int>("specularColor", 31));
		attributeFromStringMap.insert(std::pair<std::string,int>("transparency", 32));
		attributeFromStringMap.insert(std::pair<std::string,int>("whichChoice", 33));
		attributeFromStringMap.insert(std::pair<std::string,int>("index", 34));
		attributeFromStringMap.insert(std::pair<std::string,int>("mode", 35));
		attributeFromStringMap.insert(std::pair<std::string,int>("source", 36));
		attributeFromStringMap.insert(std::pair<std::string,int>("function", 37));
		attributeFromStringMap.insert(std::pair<std::string,int>("alpha", 38));
		attributeFromStringMap.insert(std::pair<std::string,int>("vertexCount", 39));
		attributeFromStringMap.insert(std::pair<std::string,int>("radius", 40));
		attributeFromStringMap.insert(std::pair<std::string,int>("size", 41));
		attributeFromStringMap.insert(std::pair<std::string,int>("height", 42));
		attributeFromStringMap.insert(std::pair<std::string,int>("solid", 43));
		attributeFromStringMap.insert(std::pair<std::string,int>("ccw", 44));
		attributeFromStringMap.insert(std::pair<std::string,int>("key", 45));
		attributeFromStringMap.insert(std::pair<std::string,int>("keyValue", 46));
		attributeFromStringMap.insert(std::pair<std::string,int>("enabled", 47));
		attributeFromStringMap.insert(std::pair<std::string,int>("direction", 48));
		attributeFromStringMap.insert(std::pair<std::string,int>("position", 49));
		attributeFromStringMap.insert(std::pair<std::string,int>("orientation", 50));
		attributeFromStringMap.insert(std::pair<std::string,int>("bboxCenter", 51));
		attributeFromStringMap.insert(std::pair<std::string,int>("bboxSize", 52));
		attributeFromStringMap.insert(std::pair<std::string,int>("AS", 53));
		attributeFromStringMap.insert(std::pair<std::string,int>("InlineDEF", 54));
		attributeFromStringMap.insert(std::pair<std::string,int>("accessType", 55));
		attributeFromStringMap.insert(std::pair<std::string,int>("actionKeyPress", 56));
		attributeFromStringMap.insert(std::pair<std::string,int>("actionKeyRelease", 57));
		attributeFromStringMap.insert(std::pair<std::string,int>("address", 58));
		attributeFromStringMap.insert(std::pair<std::string,int>("altKey", 59));
		attributeFromStringMap.insert(std::pair<std::string,int>("antennaLocation", 60));
		attributeFromStringMap.insert(std::pair<std::string,int>("antennaPatternLength", 61));
		attributeFromStringMap.insert(std::pair<std::string,int>("antennaPatternType", 62));
		attributeFromStringMap.insert(std::pair<std::string,int>("applicationID", 63));
		attributeFromStringMap.insert(std::pair<std::string,int>("articulationParameterArray", 64));
		attributeFromStringMap.insert(std::pair<std::string,int>("articulationParameterChangeIndicatorArray", 65));
		attributeFromStringMap.insert(std::pair<std::string,int>("articulationParameterCount", 66));
		attributeFromStringMap.insert(std::pair<std::string,int>("articulationParameterDesignatorArray", 67));
		attributeFromStringMap.insert(std::pair<std::string,int>("articulationParameterIdPartAttachedArray", 68));
		attributeFromStringMap.insert(std::pair<std::string,int>("articulationParameterTypeArray", 69));
		attributeFromStringMap.insert(std::pair<std::string,int>("attenuation", 70));
		attributeFromStringMap.insert(std::pair<std::string,int>("autoOffset", 71));
		attributeFromStringMap.insert(std::pair<std::string,int>("avatarSize", 72));
		attributeFromStringMap.insert(std::pair<std::string,int>("axisOfRotation", 73));
		attributeFromStringMap.insert(std::pair<std::string,int>("backUrl", 74));
		attributeFromStringMap.insert(std::pair<std::string,int>("beamWidth", 75));
		attributeFromStringMap.insert(std::pair<std::string,int>("beginCap", 76));
		attributeFromStringMap.insert(std::pair<std::string,int>("bindTime", 77));
		attributeFromStringMap.insert(std::pair<std::string,int>("bottom", 78));
		attributeFromStringMap.insert(std::pair<std::string,int>("bottomRadius", 79));
		attributeFromStringMap.insert(std::pair<std::string,int>("bottomUrl", 80));
		attributeFromStringMap.insert(std::pair<std::string,int>("centerOfMass", 81));
		attributeFromStringMap.insert(std::pair<std::string,int>("centerOfRotation", 82));
		attributeFromStringMap.insert(std::pair<std::string,int>("child1Url", 83));
		attributeFromStringMap.insert(std::pair<std::string,int>("child2Url", 84));
		attributeFromStringMap.insert(std::pair<std::string,int>("child3Url", 85));
		attributeFromStringMap.insert(std::pair<std::string,int>("child4Url", 86));
		attributeFromStringMap.insert(std::pair<std::string,int>("class", 87));
		attributeFromStringMap.insert(std::pair<std::string,int>("closureType", 88));
		attributeFromStringMap.insert(std::pair<std::string,int>("collideTime", 89));
		attributeFromStringMap.insert(std::pair<std::string,int>("content", 90));
		attributeFromStringMap.insert(std::pair<std::string,int>("controlKey", 91));
		attributeFromStringMap.insert(std::pair<std::string,int>("controlPoint", 92));
		attributeFromStringMap.insert(std::pair<std::string,int>("convex", 93));
		attributeFromStringMap.insert(std::pair<std::string,int>("coordinateSystem", 94));
		attributeFromStringMap.insert(std::pair<std::string,int>("copyright", 95));
		attributeFromStringMap.insert(std::pair<std::string,int>("creaseAngle", 96));
		attributeFromStringMap.insert(std::pair<std::string,int>("crossSection", 97));
		attributeFromStringMap.insert(std::pair<std::string,int>("cryptoKeyID", 98));
		attributeFromStringMap.insert(std::pair<std::string,int>("cryptoSystem", 99));
		attributeFromStringMap.insert(std::pair<std::string,int>("cutOffAngle", 100));
		attributeFromStringMap.insert(std::pair<std::string,int>("cycleInterval", 101));
		attributeFromStringMap.insert(std::pair<std::string,int>("cycleTime", 102));
		attributeFromStringMap.insert(std::pair<std::string,int>("data", 103));
		attributeFromStringMap.insert(std::pair<std::string,int>("dataFormat", 104));
		attributeFromStringMap.insert(std::pair<std::string,int>("dataLength", 105));
		attributeFromStringMap.insert(std::pair<std::string,int>("dataUrl", 106));
		attributeFromStringMap.insert(std::pair<std::string,int>("date", 107));
		attributeFromStringMap.insert(std::pair<std::string,int>("deadReckoning", 108));
		attributeFromStringMap.insert(std::pair<std::string,int>("deletionAllowed", 109));
		attributeFromStringMap.insert(std::pair<std::string,int>("description", 110));
		attributeFromStringMap.insert(std::pair<std::string,int>("detonateTime", 111));
		attributeFromStringMap.insert(std::pair<std::string,int>("dir", 112));
		attributeFromStringMap.insert(std::pair<std::string,int>("directOutput", 113));
		attributeFromStringMap.insert(std::pair<std::string,int>("diskAngle", 114));
		attributeFromStringMap.insert(std::pair<std::string,int>("displacements", 115));
		attributeFromStringMap.insert(std::pair<std::string,int>("documentation", 116));
		attributeFromStringMap.insert(std::pair<std::string,int>("elapsedTime", 117));
		attributeFromStringMap.insert(std::pair<std::string,int>("ellipsoid", 118));
		attributeFromStringMap.insert(std::pair<std::string,int>("encodingScheme", 119));
		attributeFromStringMap.insert(std::pair<std::string,int>("endAngle", 120));
		attributeFromStringMap.insert(std::pair<std::string,int>("endCap", 121));
		attributeFromStringMap.insert(std::pair<std::string,int>("enterTime", 122));
		attributeFromStringMap.insert(std::pair<std::string,int>("enteredText", 123));
		attributeFromStringMap.insert(std::pair<std::string,int>("entityCategory", 124));
		attributeFromStringMap.insert(std::pair<std::string,int>("entityCountry", 125));
		attributeFromStringMap.insert(std::pair<std::string,int>("entityDomain", 126));
		attributeFromStringMap.insert(std::pair<std::string,int>("entityExtra", 127));
		attributeFromStringMap.insert(std::pair<std::string,int>("entityID", 128));
		attributeFromStringMap.insert(std::pair<std::string,int>("entityKind", 129));
		attributeFromStringMap.insert(std::pair<std::string,int>("entitySpecific", 130));
		attributeFromStringMap.insert(std::pair<std::string,int>("entitySubCategory", 131));
		attributeFromStringMap.insert(std::pair<std::string,int>("exitTime", 132));
		attributeFromStringMap.insert(std::pair<std::string,int>("extent", 133));
		attributeFromStringMap.insert(std::pair<std::string,int>("family", 134));
		attributeFromStringMap.insert(std::pair<std::string,int>("fanCount", 135));
		attributeFromStringMap.insert(std::pair<std::string,int>("fieldOfView", 136));
		attributeFromStringMap.insert(std::pair<std::string,int>("filled", 137));
		attributeFromStringMap.insert(std::pair<std::string,int>("finalText", 138));
		attributeFromStringMap.insert(std::pair<std::string,int>("fireMissionIndex", 139));
		attributeFromStringMap.insert(std::pair<std::string,int>("fired1", 140));
		attributeFromStringMap.insert(std::pair<std::string,int>("fired2", 141));
		attributeFromStringMap.insert(std::pair<std::string,int>("firedTime", 142));
		attributeFromStringMap.insert(std::pair<std::string,int>("firingRange", 143));
		attributeFromStringMap.insert(std::pair<std::string,int>("firingRate", 144));
		attributeFromStringMap.insert(std::pair<std::string,int>("fogType", 145));
		attributeFromStringMap.insert(std::pair<std::string,int>("forceID", 146));
		attributeFromStringMap.insert(std::pair<std::string,int>("frequency", 147));
		attributeFromStringMap.insert(std::pair<std::string,int>("frontUrl", 148));
		attributeFromStringMap.insert(std::pair<std::string,int>("fuse", 149));
		attributeFromStringMap.insert(std::pair<std::string,int>("geoCoords", 150));
		attributeFromStringMap.insert(std::pair<std::string,int>("geoGridOrigin", 151));
		attributeFromStringMap.insert(std::pair<std::string,int>("geoSystem", 152));
		attributeFromStringMap.insert(std::pair<std::string,int>("groundAngle", 153));
		attributeFromStringMap.insert(std::pair<std::string,int>("groundColor", 154));
		attributeFromStringMap.insert(std::pair<std::string,int>("hatchColor", 155));
		attributeFromStringMap.insert(std::pair<std::string,int>("hatchStyle", 156));
		attributeFromStringMap.insert(std::pair<std::string,int>("hatched", 157));
		attributeFromStringMap.insert(std::pair<std::string,int>("headlight", 158));
		attributeFromStringMap.insert(std::pair<std::string,int>("horizontal", 159));
		attributeFromStringMap.insert(std::pair<std::string,int>("horizontalDatum", 160));
		attributeFromStringMap.insert(std::pair<std::string,int>("http-equiv", 161));
		attributeFromStringMap.insert(std::pair<std::string,int>("image", 162));
		attributeFromStringMap.insert(std::pair<std::string,int>("importedDEF", 163));
		attributeFromStringMap.insert(std::pair<std::string,int>("info", 164));
		attributeFromStringMap.insert(std::pair<std::string,int>("innerRadius", 165));
		attributeFromStringMap.insert(std::pair<std::string,int>("inputFalse", 166));
		attributeFromStringMap.insert(std::pair<std::string,int>("inputNegate", 167));
		attributeFromStringMap.insert(std::pair<std::string,int>("inputSource", 168));
		attributeFromStringMap.insert(std::pair<std::string,int>("inputTrue", 169));
		attributeFromStringMap.insert(std::pair<std::string,int>("integerKey", 170));
		attributeFromStringMap.insert(std::pair<std::string,int>("intensity", 171));
		attributeFromStringMap.insert(std::pair<std::string,int>("jump", 172));
		attributeFromStringMap.insert(std::pair<std::string,int>("justify", 173));
		attributeFromStringMap.insert(std::pair<std::string,int>("keyPress", 174));
		attributeFromStringMap.insert(std::pair<std::string,int>("keyRelease", 175));
		attributeFromStringMap.insert(std::pair<std::string,int>("knot", 176));
		attributeFromStringMap.insert(std::pair<std::string,int>("lang", 177));
		attributeFromStringMap.insert(std::pair<std::string,int>("language", 178));
		attributeFromStringMap.insert(std::pair<std::string,int>("leftToRight", 179));
		attributeFromStringMap.insert(std::pair<std::string,int>("leftUrl", 180));
		attributeFromStringMap.insert(std::pair<std::string,int>("length", 181));
		attributeFromStringMap.insert(std::pair<std::string,int>("lengthOfModulationParameters", 182));
		attributeFromStringMap.insert(std::pair<std::string,int>("level", 183));
		attributeFromStringMap.insert(std::pair<std::string,int>("limitOrientation", 184));
		attributeFromStringMap.insert(std::pair<std::string,int>("lineSegments", 185));
		attributeFromStringMap.insert(std::pair<std::string,int>("linearAcceleration", 186));
		attributeFromStringMap.insert(std::pair<std::string,int>("linearVelocity", 187));
		attributeFromStringMap.insert(std::pair<std::string,int>("linetype", 188));
		attributeFromStringMap.insert(std::pair<std::string,int>("linewidthScaleFactor", 189));
		attributeFromStringMap.insert(std::pair<std::string,int>("llimit", 190));
		attributeFromStringMap.insert(std::pair<std::string,int>("load", 191));
		attributeFromStringMap.insert(std::pair<std::string,int>("loadTime", 192));
		attributeFromStringMap.insert(std::pair<std::string,int>("localDEF", 193));
		attributeFromStringMap.insert(std::pair<std::string,int>("location", 194));
		attributeFromStringMap.insert(std::pair<std::string,int>("loop", 195));
		attributeFromStringMap.insert(std::pair<std::string,int>("marking", 196));
		attributeFromStringMap.insert(std::pair<std::string,int>("mass", 197));
		attributeFromStringMap.insert(std::pair<std::string,int>("maxAngle", 198));
		attributeFromStringMap.insert(std::pair<std::string,int>("maxBack", 199));
		attributeFromStringMap.insert(std::pair<std::string,int>("maxExtent", 200));
		attributeFromStringMap.insert(std::pair<std::string,int>("maxFront", 201));
		attributeFromStringMap.insert(std::pair<std::string,int>("maxPosition", 202));
		attributeFromStringMap.insert(std::pair<std::string,int>("metadataFormat", 203));
		attributeFromStringMap.insert(std::pair<std::string,int>("minAngle", 204));
		attributeFromStringMap.insert(std::pair<std::string,int>("minBack", 205));
		attributeFromStringMap.insert(std::pair<std::string,int>("minFront", 206));
		attributeFromStringMap.insert(std::pair<std::string,int>("minPosition", 207));
		attributeFromStringMap.insert(std::pair<std::string,int>("modulationTypeDetail", 208));
		attributeFromStringMap.insert(std::pair<std::string,int>("modulationTypeMajor", 209));
		attributeFromStringMap.insert(std::pair<std::string,int>("modulationTypeSpreadSpectrum", 210));
		attributeFromStringMap.insert(std::pair<std::string,int>("modulationTypeSystem", 211));
		attributeFromStringMap.insert(std::pair<std::string,int>("momentsOfInertia", 212));
		attributeFromStringMap.insert(std::pair<std::string,int>("multicastRelayHost", 213));
		attributeFromStringMap.insert(std::pair<std::string,int>("multicastRelayPort", 214));
		attributeFromStringMap.insert(std::pair<std::string,int>("munitionApplicationID", 215));
		attributeFromStringMap.insert(std::pair<std::string,int>("munitionEndPoint", 216));
		attributeFromStringMap.insert(std::pair<std::string,int>("munitionEntityID", 217));
		attributeFromStringMap.insert(std::pair<std::string,int>("munitionQuantity", 218));
		attributeFromStringMap.insert(std::pair<std::string,int>("munitionSiteID", 219));
		attributeFromStringMap.insert(std::pair<std::string,int>("munitionStartPoint", 220));
		attributeFromStringMap.insert(std::pair<std::string,int>("mustEvaluate", 221));
		attributeFromStringMap.insert(std::pair<std::string,int>("navType", 222));
		attributeFromStringMap.insert(std::pair<std::string,int>("networkMode", 223));
		attributeFromStringMap.insert(std::pair<std::string,int>("next", 224));
		attributeFromStringMap.insert(std::pair<std::string,int>("nodeField", 225));
		attributeFromStringMap.insert(std::pair<std::string,int>("offset", 226));
		attributeFromStringMap.insert(std::pair<std::string,int>("on", 227));
		attributeFromStringMap.insert(std::pair<std::string,int>("order", 228));
		attributeFromStringMap.insert(std::pair<std::string,int>("originator", 229));
		attributeFromStringMap.insert(std::pair<std::string,int>("outerRadius", 230));
		attributeFromStringMap.insert(std::pair<std::string,int>("parameter", 231));
		attributeFromStringMap.insert(std::pair<std::string,int>("pauseTime", 232));
		attributeFromStringMap.insert(std::pair<std::string,int>("pitch", 233));
		attributeFromStringMap.insert(std::pair<std::string,int>("points", 234));
		attributeFromStringMap.insert(std::pair<std::string,int>("port", 235));
		attributeFromStringMap.insert(std::pair<std::string,int>("power", 236));
		attributeFromStringMap.insert(std::pair<std::string,int>("previous", 237));
		attributeFromStringMap.insert(std::pair<std::string,int>("priority", 238));
		attributeFromStringMap.insert(std::pair<std::string,int>("profile", 239));
		attributeFromStringMap.insert(std::pair<std::string,int>("progress", 240));
		attributeFromStringMap.insert(std::pair<std::string,int>("protoField", 241));
		attributeFromStringMap.insert(std::pair<std::string,int>("radioEntityTypeCategory", 242));
		attributeFromStringMap.insert(std::pair<std::string,int>("radioEntityTypeCountry", 243));
		attributeFromStringMap.insert(std::pair<std::string,int>("radioEntityTypeDomain", 244));
		attributeFromStringMap.insert(std::pair<std::string,int>("radioEntityTypeKind", 245));
		attributeFromStringMap.insert(std::pair<std::string,int>("radioEntityTypeNomenclature", 246));
		attributeFromStringMap.insert(std::pair<std::string,int>("radioEntityTypeNomenclatureVersion", 247));
		attributeFromStringMap.insert(std::pair<std::string,int>("radioID", 248));
		attributeFromStringMap.insert(std::pair<std::string,int>("readInterval", 249));
		attributeFromStringMap.insert(std::pair<std::string,int>("receivedPower", 250));
		attributeFromStringMap.insert(std::pair<std::string,int>("receiverState", 251));
		attributeFromStringMap.insert(std::pair<std::string,int>("reference", 252));
		attributeFromStringMap.insert(std::pair<std::string,int>("relativeAntennaLocation", 253));
		attributeFromStringMap.insert(std::pair<std::string,int>("resolution", 254));
		attributeFromStringMap.insert(std::pair<std::string,int>("resumeTime", 255));
		attributeFromStringMap.insert(std::pair<std::string,int>("rightUrl", 256));
		attributeFromStringMap.insert(std::pair<std::string,int>("rootUrl", 257));
		attributeFromStringMap.insert(std::pair<std::string,int>("rotateYUp", 258));
		attributeFromStringMap.insert(std::pair<std::string,int>("rtpHeaderExpected", 259));
		attributeFromStringMap.insert(std::pair<std::string,int>("sampleRate", 260));
		attributeFromStringMap.insert(std::pair<std::string,int>("samples", 261));
		attributeFromStringMap.insert(std::pair<std::string,int>("shiftKey", 262));
		attributeFromStringMap.insert(std::pair<std::string,int>("side", 263));
		attributeFromStringMap.insert(std::pair<std::string,int>("siteID", 264));
		attributeFromStringMap.insert(std::pair<std::string,int>("skinCoordIndex", 265));
		attributeFromStringMap.insert(std::pair<std::string,int>("skinCoordWeight", 266));
		attributeFromStringMap.insert(std::pair<std::string,int>("skyAngle", 267));
		attributeFromStringMap.insert(std::pair<std::string,int>("skyColor", 268));
		attributeFromStringMap.insert(std::pair<std::string,int>("spacing", 269));
		attributeFromStringMap.insert(std::pair<std::string,int>("spatialize", 270));
		attributeFromStringMap.insert(std::pair<std::string,int>("speed", 271));
		attributeFromStringMap.insert(std::pair<std::string,int>("speedFactor", 272));
		attributeFromStringMap.insert(std::pair<std::string,int>("spine", 273));
		attributeFromStringMap.insert(std::pair<std::string,int>("startAngle", 274));
		attributeFromStringMap.insert(std::pair<std::string,int>("startTime", 275));
		attributeFromStringMap.insert(std::pair<std::string,int>("stiffness", 276));
		attributeFromStringMap.insert(std::pair<std::string,int>("stopTime", 277));
		attributeFromStringMap.insert(std::pair<std::string,int>("string", 278));
		attributeFromStringMap.insert(std::pair<std::string,int>("stripCount", 279));
		attributeFromStringMap.insert(std::pair<std::string,int>("style", 280));
		attributeFromStringMap.insert(std::pair<std::string,int>("summary", 281));
		attributeFromStringMap.insert(std::pair<std::string,int>("tdlType", 282));
		attributeFromStringMap.insert(std::pair<std::string,int>("tessellation", 283));
		attributeFromStringMap.insert(std::pair<std::string,int>("tessellationScale", 284));
		attributeFromStringMap.insert(std::pair<std::string,int>("time", 285));
		attributeFromStringMap.insert(std::pair<std::string,int>("timeOut", 286));
		attributeFromStringMap.insert(std::pair<std::string,int>("timestamp", 287));
		attributeFromStringMap.insert(std::pair<std::string,int>("title", 288));
		attributeFromStringMap.insert(std::pair<std::string,int>("toggle", 289));
		attributeFromStringMap.insert(std::pair<std::string,int>("top", 290));
		attributeFromStringMap.insert(std::pair<std::string,int>("topToBottom", 291));
		attributeFromStringMap.insert(std::pair<std::string,int>("topUrl", 292));
		attributeFromStringMap.insert(std::pair<std::string,int>("touchTime", 293));
		attributeFromStringMap.insert(std::pair<std::string,int>("transmitFrequencyBandwidth", 294));
		attributeFromStringMap.insert(std::pair<std::string,int>("transmitState", 295));
		attributeFromStringMap.insert(std::pair<std::string,int>("transmitterApplicationID", 296));
		attributeFromStringMap.insert(std::pair<std::string,int>("transmitterEntityID", 297));
		attributeFromStringMap.insert(std::pair<std::string,int>("transmitterRadioID", 298));
		attributeFromStringMap.insert(std::pair<std::string,int>("transmitterSiteID", 299));
		attributeFromStringMap.insert(std::pair<std::string,int>("transparent", 300));
		attributeFromStringMap.insert(std::pair<std::string,int>("triggerTime", 301));
		attributeFromStringMap.insert(std::pair<std::string,int>("triggerTrue", 302));
		attributeFromStringMap.insert(std::pair<std::string,int>("triggerValue", 303));
		attributeFromStringMap.insert(std::pair<std::string,int>("type", 304));
		attributeFromStringMap.insert(std::pair<std::string,int>("uDimension", 305));
		attributeFromStringMap.insert(std::pair<std::string,int>("uKnot", 306));
		attributeFromStringMap.insert(std::pair<std::string,int>("uOrder", 307));
		attributeFromStringMap.insert(std::pair<std::string,int>("uTessellation", 308));
		attributeFromStringMap.insert(std::pair<std::string,int>("ulimit", 309));
		attributeFromStringMap.insert(std::pair<std::string,int>("vDimension", 310));
		attributeFromStringMap.insert(std::pair<std::string,int>("vKnot", 311));
		attributeFromStringMap.insert(std::pair<std::string,int>("vOrder", 312));
		attributeFromStringMap.insert(std::pair<std::string,int>("vTessellation", 313));
		attributeFromStringMap.insert(std::pair<std::string,int>("version", 314));
		attributeFromStringMap.insert(std::pair<std::string,int>("verticalDatum", 315));
		attributeFromStringMap.insert(std::pair<std::string,int>("vertices", 316));
		attributeFromStringMap.insert(std::pair<std::string,int>("visibilityLimit", 317));
		attributeFromStringMap.insert(std::pair<std::string,int>("visibilityRange", 318));
		attributeFromStringMap.insert(std::pair<std::string,int>("warhead", 319));
		attributeFromStringMap.insert(std::pair<std::string,int>("weight", 320));
		attributeFromStringMap.insert(std::pair<std::string,int>("whichGeometry", 321));
		attributeFromStringMap.insert(std::pair<std::string,int>("writeInterval", 322));
		attributeFromStringMap.insert(std::pair<std::string,int>("xDimension", 323));
		attributeFromStringMap.insert(std::pair<std::string,int>("xSpacing", 324));
		attributeFromStringMap.insert(std::pair<std::string,int>("yScale", 325));
		attributeFromStringMap.insert(std::pair<std::string,int>("zDimension", 326));
		attributeFromStringMap.insert(std::pair<std::string,int>("zSpacing", 327));
		attributeFromStringMap.insert(std::pair<std::string,int>("visible", 328));
		attributeFromStringMap.insert(std::pair<std::string,int>("repeatR", 329));
		attributeFromStringMap.insert(std::pair<std::string,int>("texture", 330));
		attributeFromStringMap.insert(std::pair<std::string,int>("back", 331));
		attributeFromStringMap.insert(std::pair<std::string,int>("front", 332));
		attributeFromStringMap.insert(std::pair<std::string,int>("left", 333));
		attributeFromStringMap.insert(std::pair<std::string,int>("right", 334));
		attributeFromStringMap.insert(std::pair<std::string,int>("parts", 335));
		attributeFromStringMap.insert(std::pair<std::string,int>("isSelected", 336));
		attributeFromStringMap.insert(std::pair<std::string,int>("isValid", 337));
		attributeFromStringMap.insert(std::pair<std::string,int>("numComponents", 338));
		attributeFromStringMap.insert(std::pair<std::string,int>("depth", 339));
		attributeFromStringMap.insert(std::pair<std::string,int>("update", 340));
		attributeFromStringMap.insert(std::pair<std::string,int>("fogCoord", 341));
		attributeFromStringMap.insert(std::pair<std::string,int>("texCoord", 342));
		attributeFromStringMap.insert(std::pair<std::string,int>("activate", 343));
		attributeFromStringMap.insert(std::pair<std::string,int>("programs", 344));
		attributeFromStringMap.insert(std::pair<std::string,int>("matrix", 345));

	  }
  }

